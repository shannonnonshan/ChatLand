generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int          @id @default(autoincrement())
  name             String
  email            String       @unique
  password         String
  avatar           String?
  bio              String?
  role             String?
  online           Boolean      @default(false)
  lastSeen         DateTime?
  createdAt        DateTime     @default(now())
  friendshipsA     Friendship[] @relation("friendsA")
  friendshipsB     Friendship[] @relation("friendsB")
  messagesReceived Message[]    @relation("ReceivedMessages")
  messagesSent     Message[]    @relation("SentMessages")
  posts            Post[]
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  seen       Boolean  @default(false)
  senderId   Int
  receiverId Int
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
}

model Friendship {
  id        Int      @id @default(autoincrement())
  userAId   Int
  userBId   Int
  createdAt DateTime @default(now())
  userA     User     @relation("friendsA", fields: [userAId], references: [id], onDelete: Cascade)
  userB     User     @relation("friendsB", fields: [userBId], references: [id], onDelete: Cascade)

  @@unique([userAId, userBId])
  @@index([userAId])
  @@index([userBId])
}

model Post {
  id          Int      @id @default(autoincrement())
  description String
  imageUrl    String?
  createdAt   DateTime @default(now())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}
